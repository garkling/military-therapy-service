"""initial

Revision ID: a7b0c0ecc9b4
Revises:
Create Date: 2025-04-24 21:37:36.840264

"""
from typing import Sequence
from typing import Union

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a7b0c0ecc9b4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('expertise',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('code', sa.Integer(), nullable=False),
                    sa.Column('name', sa.Enum('CBT', 'HUMANISTIC', 'PTSD', 'EXISTENTIAL', 'GROUP', 'NEURO', 'CLINICAL',
                                              'STRESS_ANXIETY', 'COUNSELING', 'GRIEF_LOSS', 'ADDICTION', 'CRISIS',
                                              name='therapistexpertiseenum'), nullable=False),
                    sa.PrimaryKeyConstraint('code')
                    )
    op.create_table('military',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('age', sa.Integer(), nullable=False),
                    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('rank', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('role', sa.Enum('MILITARY', 'THERAPIST', 'ADMIN', name='userrole'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('phone')
                    )
    op.create_table('therapists',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('age', sa.Integer(), nullable=False),
                    sa.Column('education', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('experience', sa.Integer(), nullable=False),
                    sa.Column('verified', sa.Boolean(), nullable=False),
                    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('role', sa.Enum('MILITARY', 'THERAPIST', 'ADMIN', name='userrole'), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('phone')
                    )
    op.create_table('assessment_test_results',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('test_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('military_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('answers', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('expertise_codes', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
                    sa.Column('score', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['military_id'], ['military.id'], ),
                    sa.PrimaryKeyConstraint('test_id', 'military_id')
                    )
    op.create_table('militaryprofile',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('gender', sa.Enum('MALE', 'FEMALE', name='gender'), nullable=True),
                    sa.Column('about', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('marriage_status',
                              sa.Enum('SINGLE', 'MARRIED', 'DIVORCED', 'SEPARATED', 'WIDOWED', name='marriagestatus'),
                              nullable=False),
                    sa.Column('kids', sa.Integer(), nullable=False),
                    sa.Column('hobbies', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('complains', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('insecures', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('anxieties', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['military.id'], ),
                    sa.PrimaryKeyConstraint('user_id')
                    )
    op.create_table('therapist_expertise',
                    sa.Column('created_at', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.Column('updated_at', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
                    sa.Column('expertise_code', sa.Integer(), nullable=False),
                    sa.Column('therapist_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
                    sa.ForeignKeyConstraint(['expertise_code'], ['expertise.code'], ),
                    sa.ForeignKeyConstraint(['therapist_id'], ['therapists.id'], ),
                    sa.PrimaryKeyConstraint('expertise_code', 'therapist_id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('therapist_expertise')
    op.drop_table('militaryprofile')
    op.drop_table('assessment_test_results')
    op.drop_table('therapists')
    op.drop_table('military')
    op.drop_table('expertise')
    # ### end Alembic commands ###
